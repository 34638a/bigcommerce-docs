openapi: 3.0.0
info:
  title: Category Trees
  version: 3.0.0
  description: Create and manage category trees for BigCommerce stores.
  termsOfService: 'http://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce Developer Documentation
    url: 'https://developer.bigcommerce.com/'
tags:
  - name: Category Trees
paths:
  /catalog/trees:
    get:
      summary: Get All Category Trees
      description: Returns a list of *Category Trees*.
      parameters:
        - name: 'id:in'
          in: query
          schema:
            type: string
        - name: 'channel_id:in'
          in: query
          schema:
            type: string
      responses:
        '200':
          description: List of category trees.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Tree'
                  meta:
                    $ref: '#/components/schemas/MetaPaginationObject'
              example:
                data:
                  - id: 0
                    name: string
                    channels:
                      - 0
                meta:
                  pagination:
                    total: 246
                    count: 5
                    per_page: 5
                    current_page: 1
                    total_pages: 50
                    links:
                      next: '?limit=5&page=2'
                      current: '?limit=5&page=1'
      tags:
        - Category Trees
    put:
      summary: Upsert Category Trees
      description: |
        Upserts *Category Trees*. 

        If a tree object contains an ID, it is processed as an update operation using that ID. If no ID is provided, a new tree is created.

        **Usage Notes**
        * `channel_id` is required to create a *Category Tree*.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Tree'
            example:
              - id: 0
                name: string
                channels:
                  - 0
      responses:
        '200':
          description: Created a category tree.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Tree'
                  meta:
                    type: object
              example:
                data:
                  id: 0
                  name: string
                  channels:
                    - 0
                meta: {}
        '422':
          description: The Channel was not valid. See the response for more details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                status: 0
                title: string
                type: string
                instance: string
                errors:
                  additionalProp1: string
                  additionalProp2: string
                  additionalProp3: string
      tags:
        - Category Trees
    delete:
      summary: Delete Category Trees
      description: Deletes *Category Trees*. A filter must be supplied with the endpoint.
      parameters:
        - name: 'id:in'
          in: query
          schema:
            type: string
      responses:
        '204':
          description: Deleted
      tags:
        - Category Trees
  '/catalog/trees/{tree_id}/categories':
    get:
      summary: Get a Category Tree
      description: Returns a *Category Tree*.
      parameters:
        - name: tree_id
          in: path
          schema:
            type: integer
          required: true
        - name: depth
          description: Max depth for a tree of categories.
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: Categories tree
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CategoryNode'
                  meta:
                    type: object
              example:
                data:
                  - id: 0
                    parent_id: 0
                    depth: 0
                    path:
                      - 0
                    name: string
                    is_visible: true
                    children:
                      - string
                meta: {}
        '404':
          description: The tree was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                status: 0
                title: string
                type: string
                instance: string
                errors:
                  additionalProp1: string
                  additionalProp2: string
                  additionalProp3: string
      tags:
        - Category Trees
components:
  schemas:
    Tree:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          minLength: 6
          maxLength: 255
        channels:
          type: array
          items:
            type: integer
      x-tags:
        - Models
    CategoryNode:
      type: object
      properties:
        id:
          type: integer
        parent_id:
          type: integer
        depth:
          type: integer
        path:
          type: array
          items:
            type: integer
        name:
          type: string
        is_visible:
          type: boolean
        children:
          type: array
          items:
            $ref: '#/components/schemas/CategoryNode'
      x-tags:
        - Models
    Category:
      type: object
      properties:
        id:
          type: integer
        parent_id:
          type: integer
        tree_id:
          type: integer
        name:
          type: string
        description:
          type: string
        views:
          type: integer
        sort_order:
          type: integer
        page_title:
          type: string
        search_keywords:
          type: string
        meta_keywords:
          type: array
          items:
            type: string
        meta_description:
          type: string
        layout_file:
          type: string
        is_visible:
          type: boolean
        default_product_sort:
          type: string
        image_url:
          type: string
        custom_url:
          $ref: '#/components/schemas/CustomUrl'
      x-tags:
        - Models
    CategoryData:
      type: object
      properties:
        tree_id:
          type: integer
        parent_id:
          type: integer
        name:
          type: string
        description:
          type: string
        views:
          type: integer
        sort_order:
          type: integer
        page_title:
          type: string
        search_keywords:
          type: string
        meta_keywords:
          type: array
          items:
            type: string
        meta_description:
          type: string
        layout_file:
          type: string
        is_visible:
          type: boolean
        default_product_sort:
          type: string
        image_url:
          type: string
        custom_url:
          $ref: '#/components/schemas/CustomUrl'
      x-tags:
        - Models
    CustomUrl:
      type: object
      properties:
        url:
          type: string
        is_customized:
          type: boolean
      x-tags:
        - Models
    MetaPaginationObject:
      type: object
      properties:
        pagination:
          type: object
          properties:
            total:
              type: integer
              example: 246
              minimum: 0
            count:
              type: integer
              example: 5
              minimum: 0
            per_page:
              type: integer
              example: 5
              minimum: 0
            current_page:
              type: integer
              example: 1
              minimum: 1
            total_pages:
              type: integer
              example: 50
              minimum: 0
            links:
              type: object
              properties:
                next:
                  type: string
                  example: '?limit=5&page=2'
                current:
                  type: string
                  example: '?limit=5&page=1'
      x-tags:
        - Models
    DetailedErrors:
      type: object
      additionalProperties:
        type: string
      x-tags:
        - Models
    BaseError:
      type: object
      description: |
        Error payload for the BigCommerce API.
      properties:
        status:
          description: |
            The HTTP status code.
          type: integer
        title:
          description: |
            The error title describing the particular error.
          type: string
        type:
          type: string
        instance:
          type: string
      x-tags:
        - Models
    ErrorResponse:
      allOf:
        - $ref: '#/components/schemas/BaseError'
        - type: object
          properties:
            errors:
              $ref: '#/components/schemas/DetailedErrors'
      x-tags:
        - Models
x-stoplight:
  docs:
    includeDownloadLink: false
    showModels: false
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v3'
    description: ''
