openapi: 3.0.0
info:
  title: Categories
  version: ""
  description: >-
    The Categories API allows you to manage categories. To learn more about
    catalog resources see [Catalog
    Overview](https://developer.bigcommerce.com/api-docs/store-management/catalog/catalog-overview).


    - [Authentication](#authentication)

    - [Resources](#resources)


    ## Authentication

    Requests can be authenticated by sending an `access_token` via `X-Auth-Token` HTTP header:


    ```http

    GET /stores/{$$.env.store_hash}/v3/catalog/summary

    host: api.bigcommerce.com

    Accept: application/json

    X-Auth-Token: {access_token}

    ```


    |Header|Parameter|Description|

    |-|-|-|

    |`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|


    ### OAuth Scopes

    | UI Name  | Permission | Parameter                     |

    |----------|------------|-------------------------------|

    | Products | modify     | `store_v2_products`           |

    | Products | read-only  | `store_v2_products_read_only` |


    For more information on OAuth Scopes and Authenticating BigCommerce APIs, see [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).


    ## Resources


    ### Webhooks

    * [Category](https://developer.bigcommerce.com/api-docs/store-management/webhooks/events#category)


    ### Related Endpoints

    * [Catalog API](https://developer.bigcommerce.com/api-reference/store-management/catalog)
  termsOfService: https://www.bigcommerce.com/terms/
  license:
    name: ""
  contact:
    name: BigCommerce Developer Documentation
    url: https://developer.bigcommerce.com/
tags:
  - name: Category
  - name: Category Metafields
  - name: Category Images
paths:
  "/catalog/categories/{category_id}/metafields":
    parameters:
      - name: category_id
        in: path
        description: |
          The ID of the `Category` to which the resource belongs.
        required: true
        schema:
          type: integer
    get:
      description: Returns a list of *Metafields* on a *Category*. Optional filter
        parameters can be passed in.
      operationId: getCategoryMetafieldsByCategoryId
      parameters:
        - $ref: "#/components/parameters/FilterIdParam"
        - $ref: "#/components/parameters/FilterIdIn"
        - $ref: "#/components/parameters/FilterIdNotIn"
        - $ref: "#/components/parameters/FilterIdMin"
        - $ref: "#/components/parameters/FilterIdMax"
        - $ref: "#/components/parameters/FilterIdGreater"
        - $ref: "#/components/parameters/FilterIdLess"
        - name: page
          description: Specifies the page number in a limited (paginated) list of products.
          required: false
          in: query
          schema:
            type: integer
        - name: limit
          description: Controls the number of items per page in a limited (paginated) list
            of products.
          required: false
          in: query
          schema:
            type: integer
        - name: key
          in: query
          description: |
            Filter based on a metafield's key.
          required: false
          schema:
            type: string
        - name: namespace
          in: query
          description: Filter based on a metafield's namespace.
          required: false
          schema:
            type: string
        - name: include_fields
          description: Fields to include, in a comma-separated list. The ID and the
            specified fields will be returned.
          required: false
          in: query
          schema:
            type: string
        - name: exclude_fields
          description: Fields to exclude, in a comma-separated list. The specified fields
            will be excluded from a response. The ID cannot be excluded.
          required: false
          in: query
          schema:
            type: string
        - in: header
          name: Accept
          required: true
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          required: true
          schema:
            type: string
            default: application/json
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
                title: Meta Field Collection Response
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/metafield_Full"
                  meta:
                    $ref: "#/components/schemas/metaCollection_Full"
              examples:
                response:
                  value:
                    data:
                      - permission_set: app_only
                        namespace: Warehouse Locations
                        key: Location
                        value: 4HG
                        description: Location in the warehouse
                        resource_type: brand
                        resource_id: 111
                        id: 6
                        created_at: 1973-01-20T21:34:57.903Z
                        updated_at: 1990-12-30T00:29:23.515Z
                      - permission_set: read
                        namespace: Warehouse Locations
                        key: Location
                        value: 4HG
                        description: Location in the warehouse
                        resource_type: brand
                        resource_id: 111
                        id: 6
                        created_at: 1973-01-20T21:34:57.903Z
                        updated_at: 1990-12-30T00:29:23.515Z
                    meta:
                      pagination:
                        total: 2
                        count: 2
                        per_page: 50
                        current_page: 1
                        total_pages: 1
                        links:
                          current: ?page=1&limit=50
        "404":
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                type: object
                properties:
                  status:
                    description: |
                      404 HTTP status code.
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                  instance:
                    type: string
                title: Not Found
      summary: Get All Category Metafields
      tags:
        - Category Metafields
    post:
      description: >-
        Creates a *Category Metafield*.


        **Required Fields:**

        - permission_set

        - namespace

        - key

        - value


        **Read-Only Fields**

        - id


        **Note:** The max number of metafields allowed on each product, category, variant, or brand is fifty. For more information, see [Platform Limits](https://support.bigcommerce.com/s/article/Platform-Limits) in the Help Center.
      operationId: createCategoryMetafield
      parameters:
        - in: header
          name: Accept
          required: true
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          required: true
          schema:
            type: string
            default: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/metafield_Post"
        required: true
        x-examples:
          application/json:
            permission_set: app_only
            namespace: App Namespace
            key: location_id
            value: Shelf 3, Bin 5
            description: Where products are located
            resource_type: category
            resource_id: 111
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
                title: Metafield Response
                properties:
                  data:
                    type: object
                    description: Common Metafield properties.
                    title: Metafield
                    properties:
                      id:
                        type: integer
                        description: Unique ID of the *Metafield*. Read-Only.
                        example: 6
                      permission_set:
                        type: string
                        description: >
                          Determines whether the field is completely private to
                          the app that owns the field (`app_only`), or visible
                          to other API consumers (`read`), or completely open
                          for reading and writing to other apps (`write`).
                          Required for POST.
                        enum:
                          - app_only
                          - read
                          - write
                          - read_and_sf_access
                          - write_and_sf_access
                      namespace:
                        type: string
                        description: >
                          Namespace for the metafield, for organizational
                          purposes. This is set set by the developer. Required
                          for POST.
                        minLength: 1
                        maxLength: 64
                        example: Warehouse Locations
                        required:
                          - post
                      key:
                        type: string
                        description: >
                          The name of the field, for example: `location_id`,
                          `color`. Required for POST.
                        minLength: 1
                        maxLength: 64
                        example: Location
                        required:
                          - post
                      value:
                        type: string
                        description: >
                          The value of the field, for example: `1`, `blue`.
                          Required for POST.
                        minLength: 1
                        maxLength: 65535
                        example: 4HG
                        required:
                          - post
                      description:
                        type: string
                        description: |
                          Description for the metafields.
                        minLength: 0
                        maxLength: 255
                        example: Location in the warehouse
                      resource_type:
                        type: string
                        description: >
                          The type of resource with which the metafield is
                          associated.
                        enum:
                          - category
                          - brand
                          - product
                          - variant
                        example: product
                        required:
                          - post
                      resource_id:
                        type: integer
                        description: >
                          The ID for the resource with which the metafield is
                          associated.
                        minimum: 0
                        maximum: 10000000000
                        example: 111
                        required:
                          - post
                      created_at:
                        type: string
                        format: date-time
                        description: |
                          Date and time of the metafield's creation. Read-Only.
                        example: 2018-05-07T20:14:17+00:00
                      updated_at:
                        type: string
                        format: date-time
                        description: >
                          Date and time when the metafield was last updated.
                          Read-Only.
                        example: 2018-05-07T20:14:17+00:00
                    required:
                      - permission_set
                      - namespace
                      - key
                      - value
                  meta:
                    type: object
                    description: Empty meta object; may be used later.
                    title: Meta
              examples:
                response:
                  value:
                    data:
                      id: 8
                      key: location_id
                      value: Shelf 3, Bin 5
                      namespace: Inventory Namespace
                      permission_set: read
                      resource_type: product
                      resource_id: 158
                      description: Where products are located
                      date_created: 2018-09-13T16:42:37+00:00
                      date_modified: 2018-09-13T16:42:37+00:00
                    meta: {}
        "409":
          description: >
            The `Metafield` was in conflict with another `Metafield`. This can
            be the result of duplicate, unique key combinations of the app's
            client id, namespace, key, resource_type, and resource_id.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: |
                      Error payload for the BigCommerce API.
                    properties:
                      status:
                        description: |
                          The HTTP status code.
                        type: integer
                      title:
                        description: |
                          The error title describing the particular error.
                        type: string
                      type:
                        type: string
                      instance:
                        type: string
                    title: Base Error
                  - type: object
                    properties:
                      errors:
                        type: object
                        title: Detailed Errors
                        properties:
                          additionalProperties:
                            type: string
                title: Error Response
        "422":
          description: >
            The `Metafield` was not valid. This is the result of missing
            required fields, or of invalid data. See the response for more
            details.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: |
                      Error payload for the BigCommerce API.
                    properties:
                      status:
                        description: |
                          The HTTP status code.
                        type: integer
                      title:
                        description: |
                          The error title describing the particular error.
                        type: string
                      type:
                        type: string
                      instance:
                        type: string
                    title: Base Error
                  - type: object
                    properties:
                      errors:
                        type: object
                        title: Detailed Errors
                        properties:
                          additionalProperties:
                            type: string
                title: Error Response
      summary: Create a Category Metafield
      tags:
        - Category Metafields
  "/catalog/categories/{category_id}/metafields/{metafield_id}":
    parameters:
      - name: metafield_id
        in: path
        description: |
          The ID of the `Metafield`.
        required: true
        schema:
          type: integer
      - name: category_id
        in: path
        description: |
          The ID of the `Category` to which the resource belongs.
        required: true
        schema:
          type: integer
    get:
      description: Returns a single *Category Metafield*. Optional parameters can be passed
        in.
      operationId: getCategoryMetafieldByCategoryId
      parameters:
        - name: include_fields
          description: Fields to include, in a comma-separated list. The ID and the
            specified fields will be returned.
          required: false
          in: query
          schema:
            type: string
        - name: exclude_fields
          description: Fields to exclude, in a comma-separated list. The specified fields
            will be excluded from a response. The ID cannot be excluded.
          required: false
          in: query
          schema:
            type: string
        - in: header
          name: Accept
          required: true
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          required: true
          schema:
            type: string
            default: application/json
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
                title: Metafield Response
                properties:
                  data:
                    $ref: "#/components/schemas/metafield_Base"
                  meta:
                    type: object
                    description: Empty meta object; may be used later.
                    title: Meta
              examples:
                response:
                  value:
                    data:
                      id: 8
                      key: location_id
                      value: Shelf 3, Bin 5
                      namespace: Inventory Namespace
                      permission_set: read
                      resource_type: product
                      resource_id: 158
                      description: Where products are located
                      date_created: 2018-09-13T16:42:37+00:00
                      date_modified: 2018-09-13T16:42:37+00:00
                    meta: {}
        "404":
          description: The resource was not found.
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                type: object
                properties:
                  status:
                    description: |
                      404 HTTP status code.
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                  instance:
                    type: string
                title: Not Found
      summary: Get a Category Metafield
      tags:
        - Category Metafields
    put:
      description: >-
        Updates a *Category Metafield*.


        **Required Fields**

        * none


        **Read-Only Fields**

        * id

        * These fields can only be modified by the app (API credentials) that created the metafield:
        	* namespace
        	* key
        	* permission_set

        **Usage Notes**

        * Attempting to modify `namespace`, `key`, and `permission_set` fields using a client ID different from the one used to create those metafields will result in a 403 error message. 
      operationId: updateCategoryMetafield
      parameters:
        - in: header
          name: Accept
          required: true
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          required: true
          schema:
            type: string
            default: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/metafield_Put"
        required: true
        x-examples:
          application/json:
            permission_set: app_only
            namespace: Warehouse SKUS
            key: Location
            value: 4H
            description: Location in the warehouse
            resource_type: category
            resource_id: 111
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
                title: Metafield Response
                properties:
                  data:
                    $ref: "#/components/schemas/metafield_Full"
                  meta:
                    type: object
                    description: Empty meta object; may be used later.
                    title: Meta
              examples:
                response:
                  value:
                    data:
                      id: 8
                      key: location_id
                      value: Shelf 3, Bin 5
                      namespace: Inventory Namespace
                      permission_set: read
                      resource_type: product
                      resource_id: 158
                      description: Where products are located
                      date_created: 2018-09-13T16:42:37+00:00
                      date_modified: 2018-09-13T16:42:37+00:00
                    meta: {}
        "404":
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                type: object
                properties:
                  status:
                    description: |
                      404 HTTP status code.
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                  instance:
                    type: string
                title: Not Found
      summary: Update a Category Metafield
      tags:
        - Category Metafields
    delete:
      description: Deletes a *Category Metafield*.
      operationId: deleteCategoryMetafieldById
      responses:
        "204":
          description: ""
      summary: Delete a Category Metafield
      parameters:
        - in: header
          name: Accept
          required: true
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          required: true
          schema:
            type: string
            default: application/json
      tags:
        - Category Metafields
  "/catalog/categories/{category_id}/image":
    parameters:
      - name: category_id
        in: path
        description: |
          The ID of the `Category` to which the resource belongs.
        required: true
        schema:
          type: integer
    post:
      parameters:
        - in: header
          name: Accept
          required: true
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          required: true
          schema:
            type: string
            default: application/json
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image_file:
                  type: string
                  format: binary
      description: >-
        Create a *Category Image*.

         **Required Fields**
        - image_file: Form posts are the only accepted upload option.


        Only one image at a time can be created.

        Limit image size to 1MB.

        To update a *Category Image*, use the [PUT Categories](/api-reference/catalog/catalog-api/category/updatecategory) and an `image_url`.
      operationId: createCategoryImage
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      image_url:
                        type: string
                  meta:
                    type: object
              examples:
                response:
                  value:
                    data:
                      image_url: https://cdn11.bigcommerce.com/s-{store_hash}/product_images/k/group_1545334669__76009.png
                    meta: {}
        "404":
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                type: object
                properties:
                  status:
                    description: |
                      404 HTTP status code.
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                  instance:
                    type: string
                title: Not Found
        "422":
          description: >
            Image was not valid. This is the result of a missing `image_file`
            field or an incorrect file type. See the response for more details.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: |
                      Error payload for the BigCommerce API.
                    properties:
                      status:
                        description: |
                          The HTTP status code.
                        type: integer
                      title:
                        description: |
                          The error title describing the particular error.
                        type: string
                      type:
                        type: string
                      instance:
                        type: string
                    title: Base Error
                  - type: object
                    properties:
                      errors:
                        type: object
                        title: Detailed Errors
                        properties:
                          additionalProperties:
                            type: string
                title: Error Response
      summary: Create a Category Image
      tags:
        - Category Images
    delete:
      description: Deletes a *Cateogory Image*.
      operationId: deleteCategoryImage
      responses:
        "204":
          description: ""
      summary: Delete a Category Image
      parameters:
        - in: header
          name: Accept
          required: true
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          required: true
          schema:
            type: string
            default: application/json
      tags:
        - Category Images
security:
  - X-Auth-Client: []
  - X-Auth-Token: []
x-stoplight:
  docs:
    includeDownloadLink: true
    showModels: false
servers:
  - url: https://api.bigcommerce.com/stores/{$$.env.store_hash}/v3
    variables:
      $$.env.store_hash:
        default: unknown
components:
  parameters:
    FilterTemplateFileParam:
      in: query
      name: template_file
      description: "The template file, for example: `pages/home`."
      required: false
      schema:
        type: string
    FilterIdParam:
      name: id
      description: |
        Filter items by id.
      required: false
      in: query
      schema:
        type: integer
    FilterSkuParam:
      name: sku
      description: |
        Filter items by sku.
      required: false
      in: query
      schema:
        type: string
    FilterNameParam:
      name: name
      description: |
        Filter items by name.
      required: false
      in: query
      schema:
        type: string
    FilterEmailParam:
      name: email
      description: |
        Filter items by email.
      required: false
      in: query
      schema:
        type: string
    FilterSourceParam:
      name: source
      description: |
        Filter items by source.
      required: false
      in: query
      schema:
        type: string
    FilterOrderIdParam:
      name: order_id
      description: |
        Filter items by order_id.
      required: false
      in: query
      schema:
        type: integer
    FilterUpcParam:
      name: upc
      description: |
        Filter items by upc.
      required: false
      in: query
      schema:
        type: string
    FilterPriceParam:
      name: price
      description: |
        Filter items by price.
      required: false
      in: query
      schema:
        type: number
    FilterSalePriceParam:
      name: sale_price
      description: |
        Filter items by sale_price.
      required: false
      in: query
      schema:
        type: number
    FilterRetailPriceParam:
      name: retail_price
      description: |
        Filter items by retail_price.
      required: false
      in: query
      schema:
        type: number
    FilterMapPriceParam:
      name: map_price
      description: |
        Filter items by map_price.
      required: false
      in: query
      schema:
        type: number
    FilterCalculatedPriceParam:
      name: calculated_price
      description: |
        Filter items by calculated_price.
      required: false
      in: query
      schema:
        type: number
    FilterWeightParam:
      name: weight
      description: |
        Filter items by weight.
      required: false
      in: query
      schema:
        type: number
    FilterConditionParam:
      name: condition
      description: |
        Filter items by condition.
      required: false
      in: query
      schema:
        type: string
        enum:
          - new
          - used
          - refurbished
    FilterBrandIdParam:
      name: brand_id
      description: |
        Filter items by brand_id.
      required: false
      in: query
      schema:
        type: integer
    FilterDateModifiedParam:
      name: date_modified
      description: Filter items by date_modified. For example
        `v3/catalog/products?date_modified:min=2018-06-15`
      required: false
      in: query
      schema:
        type: string
        format: date-time
    FilterDateCreatedParam:
      name: date_created
      description: |
        Filter items by date_created.
      required: false
      in: query
      schema:
        type: string
        format: date-time
    FilterDateLastImportedParam:
      name: date_last_imported
      description: Filter items by date_last_imported. For example
        `v3/catalog/products?date_last_imported:min=2018-06-15`
      required: false
      in: query
      schema:
        type: string
        format: date-time
    FilterIsVisibleParam:
      name: is_visible
      description: "Filter items by if visible on the storefront. "
      required: false
      in: query
      schema:
        type: boolean
    FilterIsFeaturedParam:
      name: is_featured
      description: |
        Filter items by is_featured.
      required: false
      in: query
      schema:
        type: integer
    FilterIsFreeShippingParam:
      name: is_free_shipping
      description: |
        Filter items by is_free_shipping.
      required: false
      in: query
      schema:
        type: integer
    FilterInventoryLevelParam:
      name: inventory_level
      description: |
        Filter items by inventory_level.
      required: false
      in: query
      schema:
        type: integer
    FilterInventoryLowParam:
      name: inventory_low
      description: |
        Filter items by inventory_low. Values: 1, 0.
      required: false
      in: query
      schema:
        type: integer
    FilterOutOfStockParam:
      name: out_of_stock
      description: >
        Filter items by out_of_stock. To enable the filter, pass
        `out_of_stock`=`1`.
      required: false
      in: query
      schema:
        type: integer
    FilterTotalSoldParam:
      name: total_sold
      description: |
        Filter items by total_sold.
      required: false
      in: query
      schema:
        type: integer
    ProductFilterTypeParam:
      name: type
      description: "Filter items by type: `physical` or `digital`."
      required: false
      in: query
      schema:
        type: string
        enum:
          - digital
          - physical
    FilterCategoriesParam:
      name: categories
      description: >-
        Filter items by categories.
         If a product is in more than one category, using this query will not return the product. Instead use `categories:in=12`.
      required: false
      in: query
      schema:
        type: integer
    FilterKeywordParam:
      name: keyword
      description: Filter items by keywords. eg. new, towel, bath
      required: false
      in: query
      schema:
        type: string
    ProductFilterKeywordParam:
      name: keyword
      description: >
        Filter items by keywords found in the `name`, `description`, or `sku`
        fields, or in the brand name.
      required: false
      in: query
      schema:
        type: string
    ProductFilterKeywordContextParam:
      name: keyword_context
      description: Set context for a product search.
      required: false
      in: query
      schema:
        type: string
        enum:
          - shopper
          - merchant
    FilterStatusParam:
      name: status
      description: |
        Filter items by status.
      required: false
      in: query
      schema:
        type: integer
    FilterIncludeParam:
      name: include
      description: Sub-resources to include on a product, in a comma-separated list. If
        `options` or `modifiers` is used, results are limited to 10 per page.
      required: false
      in: query
      schema:
        type: string
        enum:
          - variants
          - images
          - custom_fields
          - bulk_pricing_rules
          - primary_image
          - modifiers
          - options
          - videos
    FilterIncludeFieldsParam:
      name: include_fields
      description: Fields to include, in a comma-separated list. The ID and the specified
        fields will be returned.
      required: false
      in: query
      schema:
        type: string
    FilterExcludeFieldsParam:
      name: exclude_fields
      description: Fields to exclude, in a comma-separated list. The specified fields will
        be excluded from a response. The ID cannot be excluded.
      required: false
      in: query
      schema:
        type: string
    FilterParentIdParam:
      name: parent_id
      description: "Filter items by parent_id. If the category is a child or sub category
        it can be filtered with the parent_id. "
      required: false
      in: query
      schema:
        type: integer
    FilterPageTitleParam:
      name: page_title
      description: |
        Filter items by page_title.
      required: false
      in: query
      schema:
        type: string
    FilterAvailabilityParam:
      name: availability
      description: |
        Filter items by availability. Values are: available, disabled, preorder.
      required: false
      in: query
      schema:
        type: string
        enum:
          - available
          - disabled
          - preorder
    FilterProductIdParam:
      name: product_id
      in: query
      required: false
      description: |
        A comma-separated list of ids of `Product`s whose prices were requested.
      schema:
        type: string
    FilterVariantIdParam:
      name: variant_id
      in: query
      required: false
      description: |
        The ID of the `Variant` whose prices were requested.
      schema:
        type: integer
    FilterCurrencyParam:
      name: currency
      description: |
        Filter items by currency.
      required: false
      in: query
      schema:
        type: string
        format: ISO-4217
    PageParam:
      name: page
      description: Specifies the page number in a limited (paginated) list of products.
      required: false
      in: query
      schema:
        type: integer
    LimitParam:
      name: limit
      description: Controls the number of items per page in a limited (paginated) list of
        products.
      required: false
      in: query
      schema:
        type: integer
    DirectionParam:
      name: direction
      description: |
        Sort direction. Acceptable values are: `asc`, `desc`.
      required: false
      in: query
      schema:
        type: string
        enum:
          - asc
          - desc
    ProductSortParam:
      name: sort
      description: |
        Field name to sort by.
      required: false
      in: query
      schema:
        type: string
        enum:
          - id
          - name
          - sku
          - price
          - date_modified
          - date_last_imported
          - inventory_level
          - is_visible
          - total_sold
    ProductIdParam:
      name: product_id
      in: path
      description: |
        The ID of the `Product` to which the resource belongs.
      required: true
      schema:
        type: integer
    ReviewIdParam:
      name: review_id
      description: |
        The ID of the `review` that is being operated on.
      required: true
      in: path
      schema:
        type: integer
    ImageIdParam:
      name: image_id
      description: |
        The ID of the `Image` that is being operated on.
      required: true
      in: path
      schema:
        type: integer
    VideoIdParam:
      name: id
      description: The BigCommerce ID of the `Video`
      required: true
      in: path
      schema:
        type: integer
    ComplexRuleIdParam:
      name: complex_rule_id
      description: |
        The ID of the `ComplexRule`.
      required: true
      in: path
      schema:
        type: integer
    ConfigurableFieldIdParam:
      name: configurable_field_id
      description: |
        The ID of the `ConfigurableField`.
      required: true
      in: path
      schema:
        type: integer
    CustomFieldIdParam:
      name: custom_field_id
      description: |
        The ID of the `CustomField`.
      required: true
      in: path
      schema:
        type: integer
    BulkPricingRuleIdParam:
      name: bulk_pricing_rule_id
      description: |
        The ID of the `BulkPricingRule`.
      required: true
      in: path
      schema:
        type: integer
    ModifierIdParam:
      name: modifier_id
      description: |
        The ID of the `Modifier`.
      required: true
      in: path
      schema:
        type: integer
    ValueIdParam:
      name: value_id
      description: |
        The ID of the `Modifier/Option Value`.
      required: true
      in: path
      schema:
        type: integer
    OptionIdParam:
      name: option_id
      description: |
        The ID of the `Option`.
      required: true
      in: path
      schema:
        type: integer
    VariantIdParam:
      name: variant_id
      in: path
      description: |
        ID of the variant on a product, or on an associated Price List Record.
      required: true
      schema:
        type: integer
    CategoryIdParam:
      name: category_id
      in: path
      description: |
        The ID of the `Category` to which the resource belongs.
      required: true
      schema:
        type: integer
    BrandIdParam:
      name: brand_id
      in: path
      description: |
        The ID of the `Brand` to which the resource belongs.
      required: true
      schema:
        type: integer
    MetafieldIdParam:
      name: metafield_id
      in: path
      description: |
        The ID of the `Metafield`.
      required: true
      schema:
        type: integer
    MetafieldKeyParam:
      name: key
      in: query
      description: |
        Filter based on a metafield's key.
      required: false
      schema:
        type: string
    MetafieldNamespaceParam:
      name: namespace
      in: query
      description: Filter based on a metafield's namespace.
      required: false
      schema:
        type: string
    OrderIdParam:
      name: order_id
      in: path
      description: |
        The ID of the `Order` to which the transactions belong.
      required: true
      schema:
        type: integer
    Accept:
      in: header
      name: Accept
      required: true
      schema:
        type: string
        default: application/json
    Content-Type:
      name: Content-Type
      in: header
      required: true
      schema:
        type: string
        default: application/json
    product_id:
      name: product_id
      in: query
      description: >-
        A comma-separated list of ids of Products whose prices were requested.
        For example:

        `?product_id=:id`

        `?product_id:in=77,80,81`
      schema:
        type: string
    FilterIdIn:
      in: query
      name: id:in
      schema:
        type: array
        items:
          type: integer
    FilterIdNotIn:
      in: query
      name: id:not_in
      schema:
        type: array
        items:
          type: integer
    FilterIdMax:
      in: query
      name: id:max
      schema:
        type: array
        items:
          type: integer
    FilterIdMin:
      in: query
      name: id:min
      schema:
        type: array
        items:
          type: integer
    FilterIdGreater:
      in: query
      name: id:greater
      schema:
        type: array
        items:
          type: integer
    FilterIdLess:
      in: query
      name: id:less
      schema:
        type: array
        items:
          type: integer
  responses:
    MetafieldCollectionResponse:
      description: ""
      content:
        application/json:
          schema:
            type: object
            title: Meta Field Collection Response
            properties:
              data:
                type: array
                items:
                  type: object
                  description: Common Metafield properties.
                  title: Metafield
                  properties:
                    id:
                      type: integer
                      description: Unique ID of the *Metafield*. Read-Only.
                      example: 6
                    permission_set:
                      type: string
                      description: >
                        Determines whether the field is completely private to
                        the app that owns the field (`app_only`), or visible to
                        other API consumers (`read`), or completely open for
                        reading and writing to other apps (`write`). Required
                        for POST.
                      enum:
                        - app_only
                        - read
                        - write
                      required:
                        - post
                    namespace:
                      type: string
                      description: >
                        Namespace for the metafield, for organizational
                        purposes. This is set set by the developer. Required for
                        POST.
                      minLength: 1
                      maxLength: 64
                      example: Warehouse Locations
                      required:
                        - post
                    key:
                      type: string
                      description: >
                        The name of the field, for example: `location_id`,
                        `color`. Required for POST.
                      minLength: 1
                      maxLength: 64
                      example: Location
                      required:
                        - post
                    value:
                      type: string
                      description: >
                        The value of the field, for example: `1`, `blue`.
                        Required for POST.
                      minLength: 1
                      maxLength: 65535
                      example: 4HG
                      required:
                        - post
                    description:
                      type: string
                      description: |
                        Description for the metafields.
                      minLength: 0
                      maxLength: 255
                      example: Location in the warehouse
                    resource_type:
                      type: string
                      description: >
                        The type of resource with which the metafield is
                        associated.
                      enum:
                        - category
                        - brand
                        - product
                        - variant
                      example: product
                      required:
                        - post
                    resource_id:
                      type: integer
                      description: >
                        The ID for the resource with which the metafield is
                        associated.
                      minimum: 0
                      maximum: 10000000000
                      example: 111
                      required:
                        - post
                    created_at:
                      type: string
                      format: date-time
                      description: |
                        Date and time of the metafield's creation. Read-Only.
                      example: 2018-05-07T20:14:17+00:00
                    updated_at:
                      type: string
                      format: date-time
                      description: >
                        Date and time when the metafield was last updated.
                        Read-Only.
                      example: 2018-05-07T20:14:17+00:00
                  required:
                    - permission_set
                    - namespace
                    - key
                    - value
              meta:
                $ref: "#/components/schemas/metaCollection_Full"
          examples:
            response:
              value:
                data:
                  - permission_set: app_only
                    namespace: Warehouse Locations
                    key: Location
                    value: 4HG
                    description: Location in the warehouse
                    resource_type: brand
                    resource_id: 111
                    id: 6
                    created_at: 1973-01-20T21:34:57.903Z
                    updated_at: 1990-12-30T00:29:23.515Z
                  - permission_set: read
                    namespace: Warehouse Locations
                    key: Location
                    value: 4HG
                    description: Location in the warehouse
                    resource_type: brand
                    resource_id: 111
                    id: 6
                    created_at: 1973-01-20T21:34:57.903Z
                    updated_at: 1990-12-30T00:29:23.515Z
                  - permission_set: app_only
                    namespace: Warehouse Locations
                    key: Location
                    value: 4HG
                    description: Location in the warehouse
                    resource_type: brand
                    resource_id: 111
                    id: 6
                    created_at: 1973-01-20T21:34:57.903Z
                    updated_at: 1990-12-30T00:29:23.515Z
                meta:
                  pagination:
                    total: 3
                    count: 3
                    per_page: 50
                    current_page: 1
                    total_pages: 1
                    links:
                      current: ?page=1&limit=50
    MetafieldResponse:
      description: ""
      content:
        application/json:
          schema:
            type: object
            title: Metafield Response
            properties:
              data:
                type: object
                description: Common Metafield properties.
                title: Metafield
                properties:
                  id:
                    type: integer
                    description: Unique ID of the *Metafield*. Read-Only.
                    example: 6
                  permission_set:
                    type: string
                    description: >
                      Determines whether the field is completely private to the
                      app that owns the field (`app_only`), or visible to other
                      API consumers (`read`), or completely open for reading and
                      writing to other apps (`write`). Required for POST.
                    enum:
                      - app_only
                      - read
                      - write
                    required:
                      - post
                  namespace:
                    type: string
                    description: >
                      Namespace for the metafield, for organizational purposes.
                      This is set set by the developer. Required for POST.
                    minLength: 1
                    maxLength: 64
                    example: Warehouse Locations
                    required:
                      - post
                  key:
                    type: string
                    description: >
                      The name of the field, for example: `location_id`,
                      `color`. Required for POST.
                    minLength: 1
                    maxLength: 64
                    example: Location
                    required:
                      - post
                  value:
                    type: string
                    description: >
                      The value of the field, for example: `1`, `blue`. Required
                      for POST.
                    minLength: 1
                    maxLength: 65535
                    example: 4HG
                    required:
                      - post
                  description:
                    type: string
                    description: |
                      Description for the metafields.
                    minLength: 0
                    maxLength: 255
                    example: Location in the warehouse
                  resource_type:
                    type: string
                    description: >
                      The type of resource with which the metafield is
                      associated.
                    enum:
                      - category
                      - brand
                      - product
                      - variant
                    example: product
                    required:
                      - post
                  resource_id:
                    type: integer
                    description: >
                      The ID for the resource with which the metafield is
                      associated.
                    minimum: 0
                    maximum: 10000000000
                    example: 111
                    required:
                      - post
                  created_at:
                    type: string
                    format: date-time
                    description: |
                      Date and time of the metafield's creation. Read-Only.
                    example: 2018-05-07T20:14:17+00:00
                  updated_at:
                    type: string
                    format: date-time
                    description: >
                      Date and time when the metafield was last updated.
                      Read-Only.
                    example: 2018-05-07T20:14:17+00:00
                required:
                  - permission_set
                  - namespace
                  - key
                  - value
              meta:
                type: object
                description: Empty meta object; may be used later.
                title: Meta
          examples:
            response:
              value:
                data:
                  id: 8
                  key: location_id
                  value: Shelf 3, Bin 5
                  namespace: Inventory Namespace
                  permission_set: read
                  resource_type: product
                  resource_id: 158
                  description: Where products are located
                  date_created: 2018-09-13T16:42:37+00:00
                  date_modified: 2018-09-13T16:42:37+00:00
                meta: {}
    CategoryCollectionResponse:
      description: ""
      content:
        application/json:
          schema:
            type: object
            title: Category Base
            properties:
              data:
                type: array
                items: {}
              meta:
                $ref: "#/components/schemas/metaCollection_Full"
          examples:
            response:
              value:
                data:
                  - id: 19
                    parent_id: 0
                    name: Garden
                    description: This is the garden description
                    views: 0
                    sort_order: 2
                    page_title: page title
                    meta_keywords:
                      - meta keyword
                    meta_description: meta description
                    layout_file: category.html
                    image_url: ""
                    is_visible: true
                    search_keywords: search keywords
                    default_product_sort: use_store_settings
                    custom_url:
                      url: /garden/
                      is_customized: false
                  - id: 20
                    parent_id: 0
                    name: Publications
                    description: ""
                    views: 0
                    sort_order: 4
                    page_title: ""
                    meta_keywords:
                      - ""
                    meta_description: ""
                    layout_file: category_with_facets.html
                    image_url: ""
                    is_visible: true
                    search_keywords: ""
                    default_product_sort: use_store_settings
                    custom_url:
                      url: /publications/
                      is_customized: false
                  - id: 21
                    parent_id: 0
                    name: Kitchen
                    description: ""
                    views: 0
                    sort_order: 3
                    page_title: ""
                    meta_keywords:
                      - ""
                    meta_description: ""
                    layout_file: category_with_facets.html
                    image_url: ""
                    is_visible: true
                    search_keywords: ""
                    default_product_sort: use_store_settings
                    custom_url:
                      url: /kitchen/
                      is_customized: false
                  - id: 22
                    parent_id: 0
                    name: Utility
                    description: ""
                    views: 0
                    sort_order: 5
                    page_title: ""
                    meta_keywords:
                      - ""
                    meta_description: ""
                    layout_file: category_with_facets.html
                    image_url: ""
                    is_visible: true
                    search_keywords: ""
                    default_product_sort: use_store_settings
                    custom_url:
                      url: /utility/
                      is_customized: false
                  - id: 23
                    parent_id: 0
                    name: Shop All
                    description: ""
                    views: 0
                    sort_order: 0
                    page_title: ""
                    meta_keywords:
                      - ""
                    meta_description: ""
                    layout_file: category_with_facets.html
                    image_url: ""
                    is_visible: true
                    search_keywords: ""
                    default_product_sort: use_store_settings
                    custom_url:
                      url: /shop-all/
                      is_customized: false
                  - id: 39
                    parent_id: 19
                    name: Bath
                    description: ""
                    views: 0
                    sort_order: 0
                    page_title: ""
                    meta_keywords:
                      - ""
                    meta_description: ""
                    layout_file: category.html
                    image_url: ""
                    is_visible: true
                    search_keywords: ""
                    default_product_sort: use_store_settings
                    custom_url:
                      url: /garden/bath/
                      is_customized: false
                meta:
                  pagination:
                    total: 6
                    count: 6
                    per_page: 50
                    current_page: 1
                    total_pages: 1
                    links:
                      current: ?page=1&limit=50
    CategoryResponse:
      description: ""
      content:
        application/json:
          schema:
            type: object
            title: Category Response
            properties:
              data:
                $ref: "#/components/schemas/category_Full"
              meta:
                type: object
                description: Empty meta object; may be used later.
                title: Meta
  securitySchemes:
    X-Auth-Token:
      type: apiKey
      name: X-Auth-Token
      in: header
      description: >-
        ### OAuth Scopes

        |  **UI Name** | **Permission** | **Parameter** |

        | --- | --- | --- |

        |  Products | modify | `store_v2_products` |

        |  Products | read-only | `store_v2_products_read_only` |


        ### Headers


        |Header|Parameter|Description|

        |-|-|-|

        |`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|


        ### Example


        ```http

        GET /stores/{$$.env.store_hash}/v3/catalog/summary

        host: api.bigcommerce.com

        Content-Type: application/json

        X-Auth-Token: {access_token}

        ```


        * For more information on Authenticating BigCommerce APIs, see: [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).
  schemas:
    category_Full:
      type: object
      description: Common Category object properties.
      title: category_Full
      properties:
        id:
          type: integer
          description: |-
            Unique ID of the *Category*. Increments sequentially.
            Read-Only.
        parent_id:
          type: integer
          description: >-
            The unique numeric ID of the category's parent. This field controls
            where the category sits in the tree of categories that organize the
            catalog.

            Required in a POST if creating a child category.
          example: 2
          required:
            - post
        name:
          type: string
          description: >-
            The name displayed for the category. Name is unique with respect to
            the category's siblings.

            Required in a POST.
          minLength: 1
          maxLength: 50
          example: Bath
          required:
            - post
        description:
          type: string
          description: |
            The product description, which can include HTML formatting.
          example: We offer a wide variety of products perfect for relaxing
        views:
          type: integer
          description: |
            Number of views the category has on the storefront.
          example: 1050
        sort_order:
          type: integer
          description: >
            Priority this category will be given when included in the menu and
            category pages. The lower the number, the closer to the top of the
            results the category will be.
          minimum: -2147483648
          maximum: 2147483647
          example: 3
        page_title:
          type: string
          description: >
            Custom title for the category page. If not defined, the category
            name will be used as the meta title.
          minLength: 0
          maxLength: 255
          example: Bath
        search_keywords:
          type: string
          description: >
            A comma-separated list of keywords that can be used to locate the
            category when searching the store.
          minLength: 0
          maxLength: 255
        meta_keywords:
          type: array
          description: >
            Custom meta keywords for the category page. If not defined, the
            store's default keywords will be used. Must post as an array like:
            ["awesome","sauce"].
          items:
            type: string
        meta_description:
          type: string
          description: >
            Custom meta description for the category page. If not defined, the
            store's default meta description will be used.
          minLength: 0
          maxLength: 65535
        layout_file:
          type: string
          description: >
            A valid layout file. (Please refer to [this
            article](https://support.bigcommerce.com/articles/Public/Creating-Custom-Template-Files/)
            on creating category files.) This field is writable only for stores
            with a Blueprint theme applied.
          minLength: 0
          maxLength: 500
          example: category.html
        is_visible:
          type: boolean
          description: >
            Flag to determine whether the product should be displayed to
            customers browsing the store. If `true`, the category will be
            displayed. If `false`, the category will be hidden from view.
        default_product_sort:
          type: string
          description: |
            Determines how the products are sorted on category page load.
          enum:
            - use_store_settings
            - featured
            - newest
            - best_selling
            - alpha_asc
            - alpha_desc
            - avg_customer_review
            - price_asc
            - price_desc
        image_url:
          type: string
          description: >
            Image URL used for this category on the storefront. Images can be
            uploaded via form file post to `/categories/{categoryId}/image`, or
            by providing a publicly accessible URL in this field.
          x-url: true
          example: https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png
        custom_url:
          $ref: "#/components/schemas/customUrl_Full"
      required:
        - parent_id
        - name
      x-tags:
        - Models
    metafield_Base:
      type: object
      title: metafield_Base
      properties:
        id:
          type: integer
          description: Unique ID of the *Metafield*. Read-Only.
          example: 6
        permission_set:
          type: string
          description: >-
            Determines the visibility and writeability of the field by other API
            consumers.


            |Value|Description

            |-|-|

            |`app_only`|Private to the app that owns the field|

            |`read`|Visible to other API consumers|

            |`write`|Open for reading and writing by other API consumers|

            |`read_and_sf_access`|Visible to other API consumers, including on storefront|

            |`write_and_sf_access`|Open for reading and writing by other API consumers, including on storefront|
          enum:
            - app_only
            - read
            - write
            - read_and_sf_access
            - write_and_sf_access
        namespace:
          type: string
          description: >
            Namespace for the metafield, for organizational purposes. This is
            set set by the developer. Required for POST.
          minLength: 1
          maxLength: 64
          example: Warehouse Locations
          required:
            - post
        key:
          type: string
          description: >
            The name of the field, for example: `location_id`, `color`. Required
            for POST.
          minLength: 1
          maxLength: 64
          example: Location
          required:
            - post
        value:
          type: string
          description: |
            The value of the field, for example: `1`, `blue`. Required for POST.
          minLength: 1
          maxLength: 65535
          example: 4HG
          required:
            - post
        description:
          type: string
          description: |
            Description for the metafields.
          minLength: 0
          maxLength: 255
          example: Location in the warehouse
        resource_type:
          type: string
          description: |
            The type of resource with which the metafield is associated.
          enum:
            - category
            - brand
            - product
            - variant
          example: product
          required:
            - post
        resource_id:
          type: integer
          description: |
            The ID for the resource with which the metafield is associated.
          minimum: 0
          maximum: 10000000000
          example: 111
          required:
            - post
        date_created:
          type: string
          format: date-time
          description: |
            Date and time of the metafield's creation. Read-Only.
          example: 2018-05-07T20:14:17+00:00
        date_modified:
          type: string
          format: date-time
          description: |
            Date and time when the metafield was last updated. Read-Only.
          example: 2018-05-07T20:14:17+00:00
      required:
        - permission_set
        - namespace
        - key
        - value
      description: Metafield for products, categories, variants, and brands. The max number
        of metafields allowed on each product, category, variant, or brand is
        fifty. For more information, see [Platform
        Limits](https://support.bigcommerce.com/s/article/Platform-Limits) in
        the Help Center.
      x-tags:
        - Models
    metaCollection_Full:
      type: object
      description: Data about the response, including pagination and collection totals.
      title: metaCollection_Full
      properties:
        pagination:
          $ref: "#/components/schemas/pagination_Full"
      x-tags:
        - Models
    pagination_Full:
      type: object
      description: Data about the response, including pagination and collection totals.
      title: pagination_Full
      properties:
        total:
          type: integer
          description: |
            Total number of items in the result set.
          example: 36
        count:
          type: integer
          description: |
            Total number of items in the collection response.
          example: 36
        per_page:
          type: integer
          description: >
            The amount of items returned in the collection per page, controlled
            by the limit parameter.
          example: 50
        current_page:
          type: integer
          description: |
            The page you are currently on within the collection.
          example: 1
        total_pages:
          type: integer
          description: |
            The total number of pages in the collection.
          example: 1
        links:
          type: object
          description: >
            Pagination links for the previous and next parts of the whole
            collection.
          properties:
            previous:
              type: string
              description: |
                Link to the previous page returned in the response.
            current:
              type: string
              description: |
                Link to the current page returned in the response.
              example: ?page=1&limit=50
            next:
              type: string
              description: |
                Link to the next page returned in the response.
      x-tags:
        - Models
    metaEmpty_Full:
      type: object
      description: Empty meta object; may be used later.
      title: metaEmpty_Full
      x-tags:
        - Models
    errorResponse_Full:
      allOf:
        - $ref: "#/components/schemas/error_Base"
        - type: object
          properties:
            errors:
              $ref: "#/components/schemas/detailedErrors"
      title: errorResponse_Full
      x-tags:
        - Models
    error_Base:
      type: object
      description: |
        Error payload for the BigCommerce API.
      properties:
        status:
          description: |
            The HTTP status code.
          type: integer
        title:
          description: |
            The error title describing the particular error.
          type: string
        type:
          type: string
        instance:
          type: string
      title: error_Base
      x-tags:
        - Models
    errorNotFound:
      description: Error payload for the BigCommerce API.
      type: object
      properties:
        status:
          description: |
            404 HTTP status code.
          type: integer
        title:
          description: The error title describing the particular error.
          type: string
        type:
          type: string
        instance:
          type: string
      title: errorNotFound
      x-tags:
        - Models
    errorNoContent:
      description: No-content response for the BigCommerce API.
      type: object
      properties:
        status:
          description: |
            204 HTTP status code.
          type: integer
        title:
          description: The error title describing the situation.
          type: string
        type:
          type: string
        instance:
          type: string
      title: errorNoContent
      x-tags:
        - Models
    detailedErrors:
      type: object
      title: detailedErrors
      properties:
        additionalProperties:
          type: string
      x-tags:
        - Models
    metafield_Post:
      allOf:
        - $ref: "#/components/schemas/metafield_Base"
      title: metafield_Post
      x-tags:
        - Models
    metafield_Put:
      description: Properties for updating metafields.
      title: metafield_Put
      allOf:
        - type: object
          properties:
            id:
              type: integer
              description: Unique ID of the *Metafield*. Read-Only.
              example: 6
        - $ref: "#/components/schemas/metafield_Base"
      x-tags:
        - Models
    metafield_Full:
      allOf:
        - $ref: "#/components/schemas/metafield_Put"
        - type: object
          properties:
            date_created:
              type: string
              format: date-time
              description: |
                Date and time of the metafield's creation. Read-Only.
              example: 2018-05-07T20:14:17+00:00
            date_modified:
              type: string
              format: date-time
              description: |
                Date and time when the metafield was last updated. Read-Only.
              example: 2018-05-07T20:14:17+00:00
      title: metafield_Full
      x-tags:
        - Models
    errorResponse_409:
      title: errorResponse_409
      allOf:
        - properties:
            code:
              type: integer
            status:
              type: integer
            title:
              type: string
              description: The error title describing the particular error.
            type:
              type: string
        - properties:
            errors:
              $ref: "#/components/schemas/detailedErrors"
      type: object
      x-tags:
        - Models
    errorResponse_422:
      title: errorResponse_422
      allOf:
        - properties:
            code:
              type: integer
            status:
              type: integer
            title:
              type: string
              description: The error title describing the particular error.
            type:
              type: string
        - properties:
            errors:
              $ref: "#/components/schemas/detailedErrors"
      type: object
      x-tags:
        - Models
    custom_url:
      type: object
      description: The custom URL for the category on the storefront.
      title: Custom Url Category
      properties:
        url:
          type: string
          description: |
            Category URL on the storefront.
          x-url: true
          minLength: 0
          maxLength: 255
          example: /shoes
          required:
            - post
            - put
        is_customized:
          type: boolean
          description: >
            Returns `true` if the URL has been changed from its default state
            (the auto-assigned URL that BigCommerce provides).
          required:
            - post
            - put
      x-tags:
        - Models
    customUrl_Full:
      type: object
      description: The custom URL for the product on the storefront.
      title: customUrl_Full
      properties:
        url:
          type: string
          description: |
            Product URL on the storefront.
          x-url: true
          minLength: 0
          maxLength: 255
          example: /shoes
          required:
            - post
            - put
        is_customized:
          type: boolean
          description: >
            Returns `true` if the URL has been changed from its default state
            (the auto-assigned URL that BigCommerce provides).
          required:
            - post
            - put
      x-tags:
        - Models